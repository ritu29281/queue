class KQueue{
  int n,k,freespot;
  int arr*,*front,*rear,*next;
KQueue(int n,int k){
   arr= new int[n];
   next=new int[n];
   front=new int[k];
   rear=new int[k];
     for(int i=0;i<k;i++){
       front[i]=rear[i]=-1;
   }
     for(int i=0;i<n;i++){
       next[i]=i+1;
   }
   next[n-1]=-1;
}
   bool push(int x,int qi){
      if(freespot==-1){
         return false;
      }
      int index=freespot;
      freespot=next[index];
      if(front[qi]==-1){
      front[qi]=index;
      }
      else{
      next[rear[qi]]=index;
     }
     next[index]=-1;
     rear[qi]=index;
     arr[index]=x;
     return true;
}
   int pop(int qi){
     if(front[qi]==-1){
         return -1;
     }
     int index=front[qi];
     front[qi]=next[index];
     next[index]=freespot;
     freespot=index;
     return arr[index];
  }
};
